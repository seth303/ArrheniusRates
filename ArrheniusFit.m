function [fitresult, gof] = ArrheniusFit(fitting_Te, Rxn_Rates, startPoint, reaction)
%CREATEFIT(FITTING_TE,RXN_RATE_N2ION)
%  Create a fit.
%
%  Data for 'Rxn_Rate Fit' fit:
%      X Input: fitting_Te
%      Y Output: Rxn_Rate
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 09-Oct-2024 12:32:19


%% Fit: 'N2Ion'.
[xData, yData] = prepareCurveData( fitting_Te, Rxn_Rates );

% Set up fittype and options.
ft = fittype( 'A*Te^n*exp(-Ea/Te)', 'independent', 'Te', 'dependent', 'k' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.DiffMinChange = 1e-30;
opts.Display = 'Off';
opts.MaxFunEvals = 6000;
opts.Robust = 'Bisquare';
opts.StartPoint = startPoint;
opts.TolFun = 1e-40;
opts.TolX = 1e-40;

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );

% Plot fit with data.
fig = figure( 'Name', 'N2Ion' );
h = plot( fitresult, xData, yData, 'predobs', 0.99);
title(['Arrhenius Fit of ', reaction])
legend( h, 'Rxn_Rate vs. fitting_Te', reaction, 'Lower bounds', 'Upper bounds', 'Location', 'SouthEast', 'Interpreter', 'none' );
% fig.CurrentAxes.YLim = [0 1.2000e-21];
fig.CurrentAxes.YScale = 'log';
ylim auto
% Label axes
xlabel( 'Te [K]', 'Interpreter', 'none' );
ylabel( 'Rxn_Rate [cm^3 / s]');
grid on


